[{"title":"AI相关的常见词汇","path":"/2025/07/30/common-ai-words/","content":"常见词汇🤖 AGI (Artificial General Intelligence) - 通用人工智能定义：AGI是指能够像人类一样理解、学习和执行任何智力任务的人工智能系统。与当前专注于特定任务的AI不同，AGI具备跨领域思考、抽象推理和创造性解决问题的能力。 特点： 通用性：不局限于单一领域，可以处理各种复杂任务 适应性：能够在新环境中快速学习和调整 创造性：具备原创思考和创新能力 自我意识：理解自身存在和局限性 现状：目前的AI（包括GPT-4、Claude等）都属于窄域AI（Narrow AI），距离真正的AGI还有相当距离。AGI的实现可能在2030-2050年间。 🧠 CoT (Chain of Thought) - 思维链定义：一种让AI模型通过逐步推理来解决复杂问题的方法，模拟人类的思考过程。不是直接给出答案，而是展示完整的思考步骤。 工作原理： 1234567问题：一个篮子里有5个苹果，吃掉2个，又放进3个，现在有多少个？CoT推理过程：1. 初始状态：篮子里有5个苹果2. 吃掉2个：5 - 2 = 3个苹果3. 又放进3个：3 + 3 = 6个苹果4. 最终答案：篮子里现在有6个苹果 应用：在数学推理、逻辑问题、复杂决策等场景中特别有效，显著提高了大模型的问题解决准确率。 📚 LLM (Large Language Model) - 大语言模型定义：基于海量文本数据训练的语言AI模型，如GPT、Claude、Llama。通过预测下一个词的概率分布来学习语言模式，具备语言理解、生成、推理能力。 特点： 参数规模：从数十亿到上万亿参数不等 涌现能力：随规模增大出现质的跃升 通用性：可处理多种语言任务 上下文窗口：支持长文本理解（如GPT-4支持128K tokens） 代表模型：GPT-4、Claude-3、Llama-3、Gemini ⚙️ Transformer - 变换器架构定义：现代大模型的基础神经网络架构，通过自注意力机制（Self-Attention）理解文本中词语间的关联关系，实现并行处理和长距离依赖建模。 核心机制： 注意力机制：计算每个词与其他词的关联权重 位置编码：为序列中的每个位置添加位置信息 多头注意力：并行处理不同类型的语义关系 前馈网络：对每个位置进行非线性变换 革命性意义：取代了循环神经网络(RNN)，成为NLP领域的事实标准 🎨 Prompt Engineering - 提示词工程定义：设计和优化输入AI的文本指令（提示词），引导AI产生符合预期的输出结果的技术。就像与AI对话的艺术。 核心技巧： 角色设定：”你是一个资深程序员…” 示例演示：提供输入输出样例 步骤分解：将复杂任务拆分为小步骤 格式规范：指定输出格式和结构 思维链：要求展示推理过程 示例对比： 12❌ 普通提示：写一篇文章✅ 优化提示：作为科技博主，用通俗易懂的语言写一篇800字的文章，解释区块链工作原理，包含3个生活化比喻 🔧 Fine-tuning - 微调定义：在预训练大模型基础上，使用特定领域或任务的数据集进行额外训练，使通用模型适应特定需求的技术。 微调类型： 指令微调：让模型学会遵循人类指令 领域微调：适应特定行业知识（如医学、法律） 任务微调：优化特定任务表现（如翻译、摘要） 优势： 比从零训练更高效 保留通用能力的同时获得专业性 计算成本相对较低 🎯 RLHF (Reinforcement Learning from Human Feedback) - 人类反馈强化学习定义：通过人类评价员的反馈来训练AI模型，使其输出更符合人类价值观和偏好的强化学习方法。 工作流程： 初始模型：预训练的大语言模型 人类标注：人工对多个回答排序 奖励模型：训练模型预测人类偏好 强化学习：用奖励模型指导策略优化 应用成果：ChatGPT的对话质量、内容安全性、有用性显著提升 📊 Embedding - 嵌入向量定义：将文本、图像、音频等非结构化数据转化为高维数值向量的技术，使AI能够数学化地”理解”和比较语义。 工作原理： 12文本：&quot;苹果&quot; → 向量：[0.23, -0.45, 0.78, ..., 0.91] (通常512-1536维)相似度计算：cosine(苹果向量, 水果向量) ≈ 0.85 应用场景： 语义搜索：理解搜索意图而非关键词匹配 推荐系统：基于内容相似性推荐 聚类分析：发现文本间的隐含关系 👻 Hallucination - 幻觉现象定义：AI模型生成看似合理、连贯，但实际上错误、虚假或与事实不符的信息的现象。 产生原因： 训练数据局限：包含过时或错误信息 统计学习特性：倾向于生成符合语言模式的回答 知识盲区：对不确定内容过度自信 提示误导：用户引导产生错误输出 应对策略： 事实核查：交叉验证关键信息 RAG技术：结合外部知识库 不确定性表达：让AI承认”我不知道” 人工审核：重要信息人工验证 🔍 RAG (Retrieval-Augmented Generation) - 检索增强生成定义：结合外部知识检索和AI生成的技术，先检索相关信息，再基于检索结果生成回答，有效减少幻觉并提高准确性。 工作流程： 1用户问题 → 检索系统 → 相关文档 → 生成回答 核心组件： 检索器：从知识库中找到相关内容 生成器：基于检索内容生成回答 知识库：可更新的外部数据源 优势： 知识时效性：可集成最新信息 准确性提升：基于事实生成 可追溯性：可查看信息来源 领域适应：针对特定领域优化 🧩 Token - 标记定义：AI处理文本的最小语义单元，可以是完整单词、子词(subword)或单个字符，是AI”理解”文本的基础。 计算示例： 1234文本：&quot;人工智能很酷&quot;分词：[&quot;人工&quot;, &quot;智能&quot;, &quot;很&quot;, &quot;酷&quot;] → [4个tokens]文本：&quot;Artificial Intelligence is cool&quot;分词：[&quot;Artificial&quot;, &quot;Intelligence&quot;, &quot;is&quot;, &quot;cool&quot;] → [4个tokens] 计费影响： 中文字符：≈2-3个tokens&#x2F;字符 英文单词：≈1.3个tokens&#x2F;单词 特殊符号：通常1个token 🔢 Parameters - 参数定义：AI模型中可学习的变量数量，决定了模型的表达能力和性能上限。每个参数都是一个数值，通过训练过程调整。 规模演进： GPT-1：1.17亿参数 (2018) GPT-2：15亿参数 (2019) GPT-3：1750亿参数 (2020) GPT-4：估计1-1.76万亿参数 (2023) Llama-3：700亿参数 (开源) 参数与能力关系： 量变到质变：参数增加带来涌现能力 计算需求：参数量×数据量×训练时间 硬件要求：显存占用与参数量成正比 📚 词汇关系图12345678910111213141516171819202122232425graph TD AI[人工智能] --&gt; Narrow[Narrow AI 窄域AI] AI --&gt; AGI[AGI 通用人工智能] AGI --&gt; CoT[思维链 CoT] AGI --&gt; Consciousness[意识/自我意识] Narrow --&gt; LLM[大语言模型 LLM] LLM --&gt; GPT[GPT系列] LLM --&gt; Claude[Claude系列] LLM --&gt; Transformer[Transformer架构] LLM --&gt; FineTuning[微调 Fine-tuning] LLM --&gt; RLHF[人类反馈强化学习] LLM --&gt; Prompt[提示词工程] LLM --&gt; Embedding[嵌入向量] LLM --&gt; RAG[检索增强生成] LLM --&gt; Hallucination[幻觉现象] Hallucination --&gt; RAG style AGI fill:#f9f,stroke:#333 style Narrow fill:#bbf,stroke:#333 style CoT fill:#ff9,stroke:#333 🔍 实用建议如何记忆这些词汇： AGI vs Narrow AI：想象AGI是全能选手，Narrow AI是专业选手 CoT：就像做数学题要”写步骤”，不能跳步 RAG：先查资料再回答，就像写论文要先做文献调研 学习路径： 1基础词汇 → 技术原理 → 实际应用 → 前沿发展 💡 提示：这些词汇不是孤立存在的，它们共同构成了现代AI技术体系。理解它们之间的关系，比单独记忆定义更重要。","tags":["AI"],"categories":["tech"]},{"title":"Hexo速查","path":"/2024/01/01/hello-world/","content":"Just do it!Don’t do it!Something 1Something 2HelloWorld","tags":["daily"],"categories":["life"]},{"title":"生活分享","path":"/wiki/archie-life/index.html","content":"目录 健身那点事"},{"title":"健身那点事","path":"/wiki/archie-life/matters_of_fitness.html","content":"健身通识"},{"title":"全栈目录","path":"/wiki/coding-study/index.html","content":"目录"},{"title":"笔记分享","path":"/notes/index.html","content":"目录 JavaScript"},{"path":"/js/plugins/copycode.js","content":"window.codeElements.forEach((codeElement) => { // 创建复制按钮 const codeCopyBtn = document.createElement('div'); codeCopyBtn.className = 'copy-btn'; codeCopyBtn.textContent = ctx.copycode.default_text; codeElement.appendChild(codeCopyBtn); // 添加点击事件监听 codeCopyBtn.addEventListener('click', async () => { const codeToCopy = codeElement.querySelector('pre')?.innerText || ''; if (navigator.clipboard) { try { await navigator.clipboard.writeText(codeToCopy); codeCopyBtn.textContent = ctx.copycode.success_text; codeCopyBtn.classList.add('success'); hud.toast(ctx.copycode.toast, 2500); } catch (error) { codeCopyBtn.textContent = '未获得用户许可'; codeCopyBtn.classList.add('warning'); } } else { codeCopyBtn.textContent = '浏览器不支持/非HTTPS'; codeCopyBtn.classList.add('warning'); } // 3秒后恢复默认文本 setTimeout(() => { codeCopyBtn.textContent = ctx.copycode.default_text; codeCopyBtn.classList.remove('success', 'warning'); }, 3000); }); });"},{"path":"/css/custom.css","content":".runtime { font-weight: bold; color: #1241A7; }"},{"path":"/js/services/txmap.js","content":"//get请求 $.ajax({ type: 'get', url: 'https://apis.map.qq.com/ws/location/v1/ip', data: { key: '你的key', output: 'jsonp', }, dataType: 'jsonp', success: function (res) { ipLoacation = res; } }) function getDistance(e1, n1, e2, n2) { const R = 6371 const { sin, cos, asin, PI, hypot } = Math let getPoint = (e, n) => { e *= PI / 180 n *= PI / 180 return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) } } let a = getPoint(e1, n1) let b = getPoint(e2, n2) let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z) let r = asin(c / 2) * 2 * R return Math.round(r); } function showWelcome() { let dist = getDistance(113.34499552, 23.15537143, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里换成自己的经纬度 let pos = ipLoacation.result.ad_info.nation; let ip; let posdesc; //根据国家、省份、城市信息自定义欢迎语 switch (ipLoacation.result.ad_info.nation) { case \"日本\": posdesc = \"よろしく，一起去看樱花吗\"; break; case \"美国\": posdesc = \"Let us live in peace!\"; break; case \"英国\": posdesc = \"想同你一起夜乘伦敦眼\"; break; case \"俄罗斯\": posdesc = \"干了这瓶伏特加！\"; break; case \"法国\": posdesc = \"C'est La Vie\"; break; case \"德国\": posdesc = \"Die Zeit verging im Fluge.\"; break; case \"澳大利亚\": posdesc = \"一起去大堡礁吧！\"; break; case \"加拿大\": posdesc = \"拾起一片枫叶赠予你\"; break; case \"中国\": pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city + \" \" + ipLoacation.result.ad_info.district; ip = ipLoacation.result.ip; switch (ipLoacation.result.ad_info.province) { case \"北京市\": posdesc = \"北——京——欢迎你~~~\"; break; case \"天津市\": posdesc = \"讲段相声吧。\"; break; case \"河北省\": posdesc = \"山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。\"; break; case \"山西省\": posdesc = \"展开坐具长三尺，已占山河五百余。\"; break; case \"内蒙古自治区\": posdesc = \"天苍苍，野茫茫，风吹草低见牛羊。\"; break; case \"辽宁省\": posdesc = \"我想吃烤鸡架！\"; break; case \"吉林省\": posdesc = \"状元阁就是东北烧烤之王。\"; break; case \"黑龙江省\": posdesc = \"很喜欢哈尔滨大剧院。\"; break; case \"上海市\": posdesc = \"众所周知，中国只有两个城市。\"; break; case \"江苏省\": switch (ipLoacation.result.ad_info.city) { case \"南京市\": posdesc = \"这是我挺想去的城市啦。\"; break; case \"苏州市\": posdesc = \"上有天堂，下有苏杭。\"; break; default: posdesc = \"散装是必须要散装的。\"; break; } break; case \"浙江省\": posdesc = \"东风渐绿西湖柳，雁已还人未南归。\"; break; case \"河南省\": switch (ipLoacation.result.ad_info.city) { case \"郑州市\": posdesc = \"豫州之域，天地之中。\"; break; case \"南阳市\": posdesc = \"臣本布衣，躬耕于南阳。此南阳非彼南阳！\"; break; case \"驻马店市\": posdesc = \"峰峰有奇石，石石挟仙气。嵖岈山的花很美哦！\"; break; case \"开封市\": posdesc = \"刚正不阿包青天。\"; break; case \"洛阳市\": posdesc = \"洛阳牡丹甲天下。\"; break; default: posdesc = \"可否带我品尝河南烩面啦？\"; break; } break; case \"安徽省\": posdesc = \"蚌埠住了，芜湖起飞。\"; break; case \"福建省\": posdesc = \"井邑白云间，岩城远带山。\"; break; case \"江西省\": posdesc = \"落霞与孤鹜齐飞，秋水共长天一色。\"; break; case \"山东省\": posdesc = \"遥望齐州九点烟，一泓海水杯中泻。\"; break; case \"湖北省\": posdesc = \"来碗热干面！\"; break; case \"湖南省\": posdesc = \"74751，长沙斯塔克。\"; break; case \"广东省\": posdesc = \"老板来两斤福建人。\"; break; case \"广西壮族自治区\": posdesc = \"桂林山水甲天下。\"; break; case \"海南省\": posdesc = \"朝观日出逐白浪，夕看云起收霞光。\"; break; case \"四川省\": posdesc = \"康康川妹子。\"; break; case \"贵州省\": posdesc = \"茅台，学生，再塞200。\"; break; case \"云南省\": posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天。\"; break; case \"西藏自治区\": posdesc = \"躺在茫茫草原上，仰望蓝天。\"; break; case \"陕西省\": posdesc = \"来份臊子面加馍。\"; break; case \"甘肃省\": posdesc = \"羌笛何须怨杨柳，春风不度玉门关。\"; break; case \"青海省\": posdesc = \"牛肉干和老酸奶都好好吃。\"; break; case \"宁夏回族自治区\": posdesc = \"大漠孤烟直，长河落日圆。\"; break; case \"新疆维吾尔自治区\": posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风。\"; break; case \"台湾省\": posdesc = \"我在这头，大陆在那头。\"; break; case \"香港特别行政区\": posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉。\"; break; case \"澳门特别行政区\": posdesc = \"性感荷官，在线发牌。\"; break; default: posdesc = \"带我去你的城市逛逛吧！\"; break; } break; default: posdesc = \"带我去你的国家逛逛吧。\"; break; } //根据本地时间切换欢迎语 let timeChange; let date = new Date(); if (date.getHours() >= 5 && date.getHours() < 11) timeChange = \"上午好，一日之计在于晨！\"; else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = \"中午好，该摸鱼吃午饭了。\"; else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = \"下午好，懒懒地睡个午觉吧！\"; else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = \"三点几啦，一起饮茶呀！\"; else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = \"夕阳无限好！\"; else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"晚上好，夜生活嗨起来！\"; else timeChange = \"夜深了，早点休息，少熬夜。\"; try { //自定义文本和需要放的位置 document.getElementById(\"welcome-info\").innerHTML = `🎉 欢迎信息 🎉&emsp;&emsp;欢迎来自 ${pos} 的小伙伴，${timeChange}您现在距离站长约 ${dist} 公里，当前的IP地址为： ${ip}， ${posdesc}`; } catch (err) { // console.log(\"Pjax无法获取#welcome-info元素🙄🙄🙄\") } } window.onload = showWelcome; // 如果使用了pjax在加上下面这行代码 document.addEventListener('pjax:complete', showWelcome);"},{"title":"JavaScript笔记","path":"/notes/java_script.html","content":"基本知识待编辑……qwq其实写了的，一定是不见了！"},{"title":"更多","path":"/more/index.html","content":"更多"},{"title":"本站","path":"/more/about/index.html","content":"大梁的星球"},{"title":"鄙人","path":"/more/me/index.html","content":"大梁社会角色一个爱吃爱健身的伪全栈开发工程屎"}]